name: Build Elite Control Point Site

on:
  workflow_dispatch:  # Manual trigger only

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        version: latest
        virtualenvs-create: true
        virtualenvs-in-project: true
    
    - name: Get dates and timestamps for cache keys
      id: date
      run: |
        echo "today=$(date +'%Y-%m-%d')" >> $GITHUB_OUTPUT
        echo "timestamp=$(date +'%Y-%m-%d-%H%M%S')" >> $GITHUB_OUTPUT
        echo "Cache timestamp: $(date +'%Y-%m-%d-%H%M%S')"
    
    - name: Cache Elite Dangerous data files
      uses: actions/cache@v3
      with:
        path: |
          data-dump/
          data.duckdb
        key: elite-data-cache-${{ steps.date.outputs.timestamp }}
        restore-keys: |
          elite-data-cache-
    
    - name: Check cache status and existing data
      run: |
        echo "Cache key used: elite-data-cache-${{ steps.date.outputs.timestamp }}"
        echo "Checking for restored data..."
        if [ -d "data-dump" ]; then
          echo "✓ data-dump directory exists (restored from cache or created)"
          echo "Files in data-dump: $(ls data-dump/ | wc -l)"
          echo "Most recent files:"
          ls -la data-dump/ | tail -5
        else
          echo "✗ data-dump directory not found"
        fi
        if [ -f "data.duckdb" ]; then
          echo "✓ Main database exists ($(du -sh data.duckdb | cut -f1))"
        else
          echo "✗ Main database not found"
        fi
    
    - name: Install dependencies
      run: |
        poetry install --only=main
    
    - name: Create data-dump directory if it doesn't exist
      run: |
        mkdir -p data-dump
    
    - name: Run Elite Dangerous data processing pipeline
      run: |
        poetry run python -m go
      env:
        PYTHONPATH: src
    
    - name: Aggressive cleanup for GitHub Actions cache
      run: |
        echo "Running aggressive cleanup to minimize cache size..."
        echo "Current directory: $(pwd)"
        echo "Checking data-dump directory:"
        if [ -d "data-dump" ]; then
          echo "✓ data-dump directory exists"
          echo "Contents:"
          ls -la data-dump/ | head -10
        else
          echo "✗ data-dump directory does not exist"
        fi
        echo "Running cleanup script..."
        poetry run python -m clean_github
    
    - name: Verify site generation
      run: |
        echo "Checking generated site files:"
        if [ -d "site" ]; then
          echo "✓ Site directory exists"
          echo "Site contents:"
          ls -la site/
          echo "Site size: $(du -sh site/ | cut -f1)"
        else
          echo "✗ Site directory not found!"
          exit 1
        fi
        
        echo "Checking database files:"
        if [ -f "data.duckdb" ]; then
          echo "✓ Main database exists ($(du -sh data.duckdb | cut -f1))"
        else
          echo "✗ Main database not found!"
        fi
        
        if [ -f "site/site-data.duckdb" ]; then
          echo "✓ Site database exists ($(du -sh site/site-data.duckdb | cut -f1))"
        else
          echo "✗ Site database not found!"
        fi
    
    - name: List cached data files for next run
      run: |
        echo "Files that will be cached for incremental updates:"
        echo "Data-dump directory contents:"
        ls -la data-dump/ | head -10 || echo "No data-dump files found"
        
        echo "Database file:"
        ls -la data.duckdb || echo "Database file not found"
    
    - name: Upload Elite Control Point Site
      uses: actions/upload-artifact@v4
      with:
        name: elite-control-point-site-${{ steps.date.outputs.today }}
        path: site/
        retention-days: 30
    
    - name: Upload build logs and debug info
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: build-debug-${{ steps.date.outputs.today }}
        path: |
          data-dump/*.lastmodified
        retention-days: 7
        if-no-files-found: ignore